# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'app.ui'
#
# Created by: PyQt5 UI code generator 5.15.5
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import random


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1093, 305)
        MainWindow.setStyleSheet("background-color: #000329;\n"
"color: #d6d6d6;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setEnabled(True)
        self.centralwidget.setObjectName("centralwidget")
        self.Title = QtWidgets.QLabel(self.centralwidget)
        self.Title.setGeometry(QtCore.QRect(5, 5, 331, 61))
        font = QtGui.QFont()
        font.setFamily("Eastwood")
        font.setPointSize(36)
        self.Title.setFont(font)
        self.Title.setObjectName("Title")
        self.MadeWith = QtWidgets.QLabel(self.centralwidget)
        self.MadeWith.setGeometry(QtCore.QRect(5, 66, 141, 16))
        self.MadeWith.setObjectName("MadeWith")
        self.Options = QtWidgets.QWidget(self.centralwidget)
        self.Options.setGeometry(QtCore.QRect(70, 150, 397, 17))
        self.Options.setObjectName("Options")
        self.Programming = QtWidgets.QRadioButton(self.Options)
        self.Programming.setGeometry(QtCore.QRect(0, 0, 91, 17))
        self.Programming.setChecked(False)
        self.Programming.setObjectName("Programming")
        self.Misc = QtWidgets.QRadioButton(self.Options)
        self.Misc.setGeometry(QtCore.QRect(91, 0, 41, 17))
        self.Misc.setChecked(False)
        self.Misc.setObjectName("Misc")
        self.Dark = QtWidgets.QRadioButton(self.Options)
        self.Dark.setGeometry(QtCore.QRect(132, 0, 51, 17))
        self.Dark.setChecked(False)
        self.Dark.setObjectName("Dark")
        self.Pun = QtWidgets.QRadioButton(self.Options)
        self.Pun.setGeometry(QtCore.QRect(183, 0, 41, 17))
        self.Pun.setChecked(False)
        self.Pun.setObjectName("Pun")
        self.Spooky = QtWidgets.QRadioButton(self.Options)
        self.Spooky.setGeometry(QtCore.QRect(224, 0, 61, 17))
        self.Spooky.setChecked(False)
        self.Spooky.setObjectName("Spooky")
        self.Christmas = QtWidgets.QRadioButton(self.Options)
        self.Christmas.setGeometry(QtCore.QRect(285, 0, 71, 17))
        self.Christmas.setChecked(False)
        self.Christmas.setObjectName("Christmas")
        self.Any = QtWidgets.QRadioButton(self.Options)
        self.Any.setGeometry(QtCore.QRect(356, 0, 41, 17))
        self.Any.setChecked(False)
        self.Any.setObjectName("Any")
        self.OptionsLabel = QtWidgets.QLabel(self.centralwidget)
        self.OptionsLabel.setGeometry(QtCore.QRect(70, 110, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Eastwood")
        font.setPointSize(24)
        self.OptionsLabel.setFont(font)
        self.OptionsLabel.setObjectName("OptionsLabel")
        self.TheJokeTitle = QtWidgets.QLabel(self.centralwidget)
        self.TheJokeTitle.setGeometry(QtCore.QRect(10, 230, 61, 31))
        self.TheJokeTitle.setStyleSheet("font: 20pt \"Eastwood\";")
        self.TheJokeTitle.setObjectName("TheJokeTitle")
        self.TheJoke = QtWidgets.QLabel(self.centralwidget)
        self.TheJoke.setGeometry(QtCore.QRect(80, 230, 1091, 31))
        font = QtGui.QFont()
        font.setFamily("Eastwood")
        font.setPointSize(14)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.TheJoke.setFont(font)
        self.TheJoke.setStyleSheet("font: 14pt \"Eastwood\";")
        self.TheJoke.setText("")
        self.TheJoke.setObjectName("TheJoke")
        self.TellMe = QtWidgets.QPushButton(self.centralwidget)
        self.TellMe.setGeometry(QtCore.QRect(70, 190, 91, 31))
        self.TellMe.setStyleSheet("background-color: #cfcfcf;\n"
"color: 111111;")
        self.TellMe.setObjectName("TellMe")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 551, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.firstrun = True

        self.programmingClicked = False
        self.miscClicked = False
        self.darkClicked = False
        self.punClicked = False
        self.spookyClicked = False
        self.christmasClicked = False
        self.anyClicked = False

        self.jokeCrap()
        self.Programming.clicked.connect(self.prclic)
        self.Misc.clicked.connect(self.mclic)
        self.Dark.clicked.connect(self.dclic)
        self.Pun.clicked.connect(self.puclic)
        self.Spooky.clicked.connect(self.sclic)
        self.Christmas.clicked.connect(self.cclic)
        self.Any.clicked.connect(self.aclic)
        self.TellMe.clicked.connect(self.jokeCrap)

        self.programjokes = ['Algorithm: A word used by programmers when they don\'t want to explain how their code works.', 
        'If Bill Gates had a dime for every time Windows crashed ... Oh wait, he does.', 
        'Debugging: Removing the needles from the haystack.', 
        'I have a joke about Stack Overflow, but you would say it\'s a duplicate.', 
        'The generation of random numbers is too important to be left to chance.', 
        'Java is like Alzheimer\'s, it starts off slow, but eventually, your memory is gone.', 
        'I\'d tell you a joke about NAT but I would have to translate.']
        self.miscjokes = ['If you\'re here for the yodeling lesson, please form an orderly orderly orderly queue.', 
        '']

    def prclic(self):
        if self.programmingClicked == False:
            self.programmingClicked = True
            self.miscClicked = False
            self.darkClicked = False
            self.punClicked = False
            self.spookyClicked = False
            self.christmasClicked = False
            self.anyClicked = False

    def mclic(self):
        if self.miscClicked:
            self.programmingClicked = False
            self.miscClicked = True
            self.darkClicked = False
            self.punClicked = False
            self.spookyClicked = False
            self.christmasClicked = False
            self.anyClicked = False

    def dclic(self):
        if self.darkClicked:
            self.programmingClicked = False
            self.miscClicked = False
            self.darkClicked = True
            self.punClicked = False
            self.spookyClicked = False
            self.christmasClicked = False
            self.anyClicked = False

    def puclic(self):
        if self.punClicked:
            self.programmingClicked = False
            self.miscClicked = False
            self.darkClicked = False
            self.punClicked = True
            self.spookyClicked = False
            self.christmasClicked = False
            self.anyClicked = False

    def sclic(self):
        if self.spookyClicked:
            self.programmingClicked = False
            self.miscClicked = False
            self.darkClicked = False
            self.punClicked = False
            self.spookyClicked = True
            self.christmasClicked = False
            self.anyClicked = False

    def cclic(self):
        if self.christmasClicked:
            self.programmingClicked = False
            self.miscClicked = False
            self.darkClicked = False
            self.punClicked = False
            self.spookyClicked = False
            self.christmasClicked = True
            self.anyClicked = False

    def aclic(self):
        if self.anyClicked:
            self.programmingClicked = False
            self.miscClicked = False
            self.darkClicked = False
            self.punClicked = False
            self.spookyClicked = False
            self.christmasClicked = False
            self.anyClicked = True

    def JokeTell(self):
        self.TheJoke.setText(self.joke)

    def jokeCrap(self):
        if self.programmingClicked:
            jk = random.randint(0, 6)
            if jk == 0:
                self.joke = self.programjokes[0]
            elif jk == 1:
                self.joke = self.programjokes[1]
            elif jk == 2:
                self.joke = self.programjokes[2]
            elif jk == 3:
                self.joke = self.programjokes[3]
            elif jk == 4:
                self.joke = self.programjokes[4]
            elif jk == 5:
                self.joke = self.programjokes[5]
            elif jk == 6:
                self.joke = self.programjokes[6]
        elif self.miscClicked:
            jk = random.randint(0, 0)
            if jk == 0:
                self.joke = self.miscjokes[0]
        else:
            self.joke = ''
        
        if self.firstrun == False:
            self.JokeTell()
        else:
            self.firstrun = False

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Joke Generator"))
        self.Title.setText(_translate("MainWindow", "Joke Generator"))
        self.MadeWith.setText(_translate("MainWindow", "Made With SV443\'s Joke API"))
        self.Programming.setText(_translate("MainWindow", "Programming"))
        self.Misc.setText(_translate("MainWindow", "Misc"))
        self.Dark.setText(_translate("MainWindow", "Dark"))
        self.Pun.setText(_translate("MainWindow", "Pun"))
        self.Spooky.setText(_translate("MainWindow", "Spooky"))
        self.Christmas.setText(_translate("MainWindow", "Christmas"))
        self.Any.setText(_translate("MainWindow", "Any"))
        self.OptionsLabel.setText(_translate("MainWindow", "Options"))
        self.TheJokeTitle.setText(_translate("MainWindow", "Joke:"))
        self.TellMe.setText(_translate("MainWindow", "Tell Me A Joke!"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
